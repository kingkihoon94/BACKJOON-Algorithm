class Solution {
    static char[] num;
    static int N;
    static int answer;
    static char[] selected;
    static boolean[] visited;
    static boolean[] memo = new boolean[10000000];
    public int solution(String numbers) {
        answer = 0;
        N = numbers.length();
        num = new char[N];
        selected = new char[N];
        for(int i=0; i<N; i++){
            num[i] = numbers.charAt(i);
        }//인트로바꾸기기.
        for(int i=1; i<=N; i++){
            visited = new boolean[N];
            dfs(i,0);
        }
        return answer;
    }//end main.
    public static void dfs(int n, int cnt){
        if(cnt == n){
            String tmp = "";
            for(int i=0; i<n; i++){
                tmp = tmp + selected[i];
            }
            int number = Integer.parseInt(tmp);
            if(!memo[number]){
                memo[number] = true;
                if(check(number)) answer++;
            }
            return ;
        }
        for(int i=0; i<N; i++){
            if(!visited[i]){ //안선택된경우.
                visited[i] = true;
                selected[cnt] = num[i]; //선택한경우.
                dfs(n, cnt+1);
                visited[i] = false;
            }
        }
    }
    public static boolean check(int num){
        if(num == 0 || num == 1)return false;
        //System.out.println((int)Math.sqrt(num));
        for(int i=2; i<=(int)Math.sqrt(num); i++){
            if(num%i == 0) return false;
        }
        return true;
    }
}//end class.